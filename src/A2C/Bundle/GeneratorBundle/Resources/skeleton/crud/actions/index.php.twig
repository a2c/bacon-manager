
    /**
{% block phpdoc_method_header %}
     * Lists all {{ entity }} entities.
{% endblock phpdoc_method_header %}
     *
{% block phpdoc_method_annotations %}
{% if 'annotation' == format %}
     * @Route("/",defaults={"page"=1, "sort"="id", "direction"="asc"}, name="{{ route_name_prefix }}")
     * @Route("/page/{page}/sort/{sort}/direction/{direction}/", defaults={"page"=1, "sort"="id", "direction"="asc"}, name="{{ route_name_prefix }}_pagination")
     * @Method("GET")
     * @Security("has_role('ROLE_ADMIN')")
     * @Template()
{% endif %}
{% endblock phpdoc_method_annotations %}
     */
{% block method_definition %}
    public function indexAction($page,$sort,$direction)
{% endblock method_definition %}
    {
{% block method_body %}
        $breadcumbs = $this->container->get('a2c_breadcrumbs');

        $breadcumbs->addItem(array(
            'title' => '{{ entity }}',
            'route' => '',
        ));

        $breadcumbs->addItem(array(
            'title' => 'List',
            'route' => '',
        ));

        if ($this->get('session')->has('{{ entity|lower }}_search_session')) {
            $objSerialize = $this->get('session')->get('{{ entity|lower }}_search_session');
            $entity = unserialize($objSerialize);
            $query = $this->getDoctrine()->getRepository('{{ bundle }}:{{ entity }}')->getQueryPagination($entity,$sort,$direction);
        } else {
            $entity = new {{ entity }}();
            $query = $this->getDoctrine()->getRepository('{{ bundle }}:{{ entity }}')->getQueryPagination($entity,$sort,$direction);
        }

        $paginator = $this->getPagination($query,$page,{{ entity }}::PER_PAGE);
        $paginator->setUsedRoute('{{ route_name_prefix }}_pagination');

        $form = $this->createForm(new {{ entity }}FormType(),$entity,array(
            'search' => true,
        ));
{% endblock method_body %}

{% block method_return %}
{% if 'annotation' == format %}
        return array(
            'pagination' => $paginator,
            'form_search' => $form->createView(),
            'form_delete' => $this->createDeleteForm()->createView(),
        );
{% else %}
        return $this->render('{{ bundle }}:{{ entity|replace({'\\': '/'}) }}:index.html.twig', array(
            'entities' => $entities,
        ));
{% endif %}
{% endblock method_return %}
    }
